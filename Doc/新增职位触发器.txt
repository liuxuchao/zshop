DELIMITER $$

CREATE TRIGGER after_insert_uu_channel_jobs 
AFTER INSERT ON uu_channel_jobs 
FOR EACH ROW 
BEGIN
INSERT INTO uu_channel_jobs_not_indexing 
(
    id,
    user_id,
    channel_type,
    channel_id,
    original_id,
    institutional_id,
    company_id,
    original_publish_status,
    is_recommend,
    name,
    short_name,
    job_trade,
    salary,
    salary_from,
    salary_to,
    work_address,
    work_years,
    work_years_from,
    work_years_to,
    degree,
    refresh_time,
    refresh_end_time,
    job_description,
    company_name,
    company_size,
    company_size_from,
    company_nature,
    company_trade,
    recommended_time,
    create_time,
    update_time,
    is_default,
    work_address_detail,
    city,
    district,
    latitude,
    longitude,
    province,
    default_recommend,
) 
VALUES 
(
    new.id,
    new.user_id,
    new.channel_type,
    new.channel_id,
    new.original_id,
    new.institutional_id,
    new.company_id,
    new.original_publish_status,
    new.is_recommend,
    new.name,
    new.short_name,
    new.job_trade,
    new.salary,
    new.salary_from,
    new.salary_to,
    new.work_address,
    new.work_years,
    new.work_years_from,
    new.work_years_to,
    new.degree,
    new.refresh_time,
    new.refresh_end_time,
    new.job_description,
    new.company_name,
    new.company_size,
    new.company_size_from,
    new.company_nature,
    new.company_trade,
    new.recommended_time,
    new.create_time,
    new.update_time,
    new.is_default,
    new.work_address_detail,
    new.city,
    new.district,
    new.latitude,
    new.longitude,
    new.province,
    new.default_recommend
);
INSERT INTO uu_channel_jobs_half_baked 
(
    id,
    channel_type,
    original_id,
    status,
    create_time,
    update_time
)
VALUES(
    new.id,
    new.channel_type,
    new.original_id,
    0,
    new.create_time,
    new.update_time
);
END $$

DELIMITER ;